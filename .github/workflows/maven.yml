# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Java CI/CD with Maven and Docker

on:
  push:
    branches: 
      - main
      - development
  pull_request:
    branches: 
      - main
      - development

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Start services with Docker Compose
      run: docker-compose up -d

    - name: Wait for MySQL to be ready
      run: |
        while ! docker-compose exec db mysqladmin --user=root --password=${{ secrets.PASSWORD }} --host "127.0.0.1" ping --silent &> /dev/null ; do
          echo "Waiting for database connection..."
          sleep 5
        done

    - name: Verify with Maven
      env:
        DB_URL: jdbc:mysql://db:3306/fattoria
        DB_USERNAME: root
        DB_PASSWORD: ${{ secrets.PASSWORD }}
      run: mvn -B verify --file pom.xml

    - name: Stop services with Docker Compose
      run: docker-compose down

  cd:
    name: Continuous Deployment
    runs-on: ubuntu-latest
    needs: ci

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and push Docker images
      run: |
        docker-compose build
        docker-compose push