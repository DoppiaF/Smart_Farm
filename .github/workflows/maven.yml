# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: 
      - main
      - development
  pull_request:
    branches: 
      - main
      - development

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0.33
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.PASSWORD }}
          MYSQL_DATABASE: fattoria
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5


    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: wait mysql to be ready
      run: sleep 60s
      
    #CI: Build the application with Maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      working-directory: .

    - name: Verify with Maven
      env:
        DB_URL: jdbc:mysql://localhost:3306/fattoria
        DB_USERNAME: root
        DB_PASSWORD: ${{ secrets.PASSWORD }}
      run: mvn -B verify --file pom.xml
      working-directory: .

    #CD: Deploy the application su docker
    - name: Build docker image
      if: github.ref == 'refs/heads/main'
      run: docker image build --tag furo98/smart_farm:0.1 .

    - name: Docker login
      if: github.ref == 'refs/heads/main'
      env:
        DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      run: echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin

    - name: Push docker image
      if: github.ref == 'refs/heads/main'
      run: docker push furo98/smart_farm:0.1

    
    